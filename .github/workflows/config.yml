on:
  # Trigger analysis when pushing in main or pull requests, and when creating
  # a pull request.
  push:
    branches:
      - main
  pull_request:
      types: [opened, synchronize, reopened]
name: Sonar Scan
jobs:
  sonarcloud:
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: BuildAndTest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"watchster" /o:"watchster" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="$(Build.SourcesDirectory)/TestResults/Coverage/coverage.opencover.xml" /d:sonar.cs.nunit.reportsPaths="WatchsterSolution\DotnetCoverage.coveragexml"
          dotnet build WatchsterSolution/Watchster.sln
          dotnet test WatchsterSolution/Watchster.sln --collect "DotnetCodeCoverage" CodeCoverage.exe analyze /output: "WatchsterSolution\DotnetCoverage.coveragexml" "WatchsterSolution\DotnetCoverage.coverage" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
